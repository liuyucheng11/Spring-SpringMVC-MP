<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.studentAdmin.dao.mapper.ArticleMapper">
    <sql id="Base_Article_Information">
        article.article_id as articleId,
        article.article_name as articleName,
        article.user_id as userId,
        article.homeUrl as  homeUrl,
        article.publish_date as publishDate,
        article.article_desc as articleDesc,
        article.article_type as articleType
    </sql>

    <insert id="publishArticle" parameterType="com.studentAdmin.domain.Article">
        insert into article (article_name,userId,homeUrl,article_type,article_desc,publish_date ) values (
        #{articleName},
        #{userId},
        #{homeUrl},
        #{articleType},
        #{articleDesc},
        #{publishDate}
        )è¿™
    </insert>
    <select id="searchArticle" parameterType="java.util.HashMap"
            resultType="com.studentAdmin.domain.Article">
        SELECT
        <include refid="Base_Article_Information"/>
        ,user.user_name as userName from article
        left join user on user.user_id = article.user_id
        <where>
            <if test="articleName !=null and articleName !=''">article.article_name like
                concat('%',#{articleName},'%')
            </if>
            <if test="type !=null ">
                and article.article_type = #{type}
            </if>
        </where>
    </select>
    <select id="qryScoreMap" parameterType="Long" resultType="com.studentAdmin.domain.Dto.ScoreDto">

       SELECT article_score.score as score ,count( * ) AS count
        FROM article_score
        WHERE article_score.article_id = #{articleId}
         GROUP BY score
    </select>
    <select id="searchArticleById" resultType="com.studentAdmin.domain.VOs.ArticleVO" parameterType="Long">
        SELECT
        <include refid="Base_Article_Information"/>
        , user.user_name as userName from article
        left join user on user.user_id = article.user_id
        where article.article_id = #{articleId}
    </select>
    <select id="qryArticleComments" parameterType="Long" resultType="com.studentAdmin.domain.VOs.ArticleScoreVO">
            SELECT  article_score.evaluate_id as evaluateId,
                    article_score.user_id as userId,
                    article_score.article_id articleId,
                    article_score.score as score,
                    article_score.create_date as createDate,
                    article_score.like_number as likeNumber,
                    article_score.comment as comment,
                    user.user_name as userName
                    from article_score
                    left join user on user.user_id = article_score.user_id
                    where
                        article_score.article_id = #{articleId}
    </select>

    <!--<select id="qryArticle" parameterType="java.util.Map"
            resultType="com.articleshare.webproject.domain.article.Article">
        SELECT
        <include refid="Base_Article_Information"/>
        ,user.user_name as userName ,article_type.type_name as articleTypeName from article, user ,article_type
        <where>
            <if test="articleName!=null and articleName != ''">
                article.article_name like CONCAT('%',#{articleName},'%')
            </if>
            <if test="type!=null and type !=''">
                and article.article_type = #{type}
            </if>
            <if test="author = null and author!=''">
                and article.userId = #{author}
            </if>
            and article.userId = user.user_id
            and article.article_type = article_type.article_type_id
        </where>
    </select>
    <select id="qryArticleCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
        count(*) from article, user
        <where>
            <if test="articleName!=null and articleName != ''">
                article.article_name like CONCAT('%',#{articleName},'%')
            </if>
            <if test="type!=null and type !=''">
                and article.article_type = #{type}
            </if>
            <if test="author = null and author!=''">
                and article.userId = #{author}
            </if>
            and article.userId = user.user_id
        </where>
    </select>
    <select id="qryArticleById" parameterType="string" resultType="com.articleshare.webproject.domain.article.Article">
        select
        <include refid="Base_Article_Information"/>
        ,user.user_name as userName , article.article_desc as articleDesc
        from article ,user where article.articleId = #{articleId} and article.userId = user.user_id
    </select>
    <select id="qryArticleScoreById" parameterType="Integer"
            resultType="com.articleshare.webproject.domain.article.ArticleScore">
        select article_score.create_date as createDate,article_score.like_number as likeNumber,article_score.evaluateId,user.user_name as userName,article_score.userId,article.article_name as articleName,article_score.score,article_score.comment from article_score,user,article
        where article_score.articleId = #{articleId} and article_score.userId = user.user_id and article.articleId = article_score.articleId
    </select>
    <select id="getHotCollectArticles" resultType="java.util.Map">
        SELECT
        article.*,
        b.count,
        user.user_name
        FROM
        (
        SELECT
        article_id,
        count( * ) AS count
        FROM
        ( SELECT article_id FROM article_collect WHERE DATE_SUB( CURDATE( ), INTERVAL 7 DAY ) &lt;= date( collect_date ) ) a
        GROUP BY
        article_id
        ORDER BY
        count DESC
        LIMIT 10
        ) b,
        article,user
        WHERE
        b.article_id = article.articleId and article.userId = user.user_id    </select>
    <select id="getHotClickArticles" resultType="java.util.Map">
        SELECT
          article.*,
        b.count,
        user.user_name
        FROM
        (
        SELECT
        article_id,
        count( * ) AS count
        FROM
        ( SELECT article_id FROM click_log WHERE DATE_SUB( CURDATE( ), INTERVAL 7 DAY ) &lt;= date( create_date ) ) a
        GROUP BY
        article_id
        ORDER BY
        count DESC
        LIMIT 10
        ) b,
        article,user
        WHERE
        b.article_id = article.articleId and article.userId = user.user_id order by b.count desc
    </select>
    <select id="qryHotArticleByType" resultType="Integer" parameterType="java.util.List">
        SELECT
        article_id ,count(*) as recentClick ,article.article_type
        FROM
        click_log,article
        WHERE
        click_log.article_id IN ( SELECT article.articleId FROM article WHERE article.article_type IN
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        )
        and click_log.article_id = article.articleId
        and DATE_SUB( CURDATE( ), INTERVAL 5 DAY ) &lt;= date( create_date )
        group by article_id order by recentClick desc
    </select>
    <select id="qryArticleByIds" resultType="com.articleshare.webproject.domain.article.Article">
        select
        <include refid="Base_Article_Information"/>
        ,user_name as userName,article_type as articleType , article_type.type_name as articleTypeName
        from article,user,article_type  where articleId in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and article.userId = user.user_id
        and article.article_type = article_type.article_type_id
    </select>
    <delete id="deleteArticleById">
        delete from article where articleId = #{articleId}
    </delete>-->
    <select id="queryCommentByMap" resultType="com.studentAdmin.domain.ArticleScore">
         select evaluate_id evaluateId,
                user_id userId,
                article_id articleId,
                score score,
                comment comment,
                create_date createDate,
                like_number likeNumber
                from article_score
                where user_id = #{userId}
                and article_id = #{articleId}


    </select>
    <select id="queryClickNum" resultType="java.lang.Long">
          select count(*) from click_log
            where article_id = #{articleId}

    </select>
    <select id="queryCollectNum" resultType="java.lang.Long">
            select count(*) from article_collect
            where article_collect.article_id = #{articleId}
    </select>

    <select id="getArticlesByUserId" resultType="com.studentAdmin.domain.VOs.ArticleVO">
        SELECT
	article.article_id articleId,
	article.article_name articleName,
	article.article_type articleType,
	article.article_desc articleDesc,
	article.publish_date publishDate,
	article.homeUrl homeUrl,
	USER.user_name userName,
	ifNULL( a.scoreCount, 0 ) scoreCount,
	ifNULL( a.avgScore, 0 ) avgScore,
	ifNULL( b.collectCount, 0 ) collectCount
FROM
	article
	LEFT JOIN USER ON USER.user_id = article.user_id
	LEFT JOIN (
SELECT
	count( * ) scoreCount,
	article_id AS articleId,
	sum( article_score.score ) / count( article_score.article_id ) avgScore
FROM
	article_score
GROUP BY
	article_id
	) a ON a.articleId = article.article_Id
	LEFT JOIN ( SELECT count( article_id ) collectCount, article_id FROM article_collect GROUP BY article_id ) b ON b.article_id = article.article_id
WHERE
	USER.user_id = #{userId}
GROUP BY
	articleId


    </select>
    <delete id="deleteById">
        delete from article where article_id = #{id}
    </delete>
</mapper>